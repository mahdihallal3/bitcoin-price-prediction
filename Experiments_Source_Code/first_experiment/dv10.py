# -*- coding: utf-8 -*-
"""DV10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ItBluvEhutoZZG2UhKFsccaOpfOLr7IO

The series of the DV (Data Visualization) notebooks is going to be used to visualize the normalized data of each of the training, validation, and testing dataset of each experiment.

**Importing Libraries**
"""

import pandas as pd
import matplotlib.pyplot as plt
import warnings
from sklearn.preprocessing import MinMaxScaler
warnings.filterwarnings("ignore")

"""**Importing Data**"""

df=pd.read_csv('Final_DataSet_10k.csv', index_col='date', parse_dates=['date'])
df['Close']=df['close'].shift(-1,fill_value=0)
df.drop(df.tail(1).index,inplace=True)
df = df.drop(columns=['close'])

df

"""**Data Partitioning**"""

train_size = int(len(df)*0.7)
validation_size= int(len(df)*0.9)
train_dataset,validation_dataset,test_dataset = df.iloc[:train_size],df.iloc[train_size:validation_size],df.iloc[validation_size:]

"""**Plotting Data**"""

plt.figure(figsize = (14, 6))
plt.rcParams['figure.dpi'] = 360
plt.plot(train_dataset.Close)
plt.plot(validation_dataset.Close)
plt.plot(test_dataset.Close)
plt.xlabel('\nDate')
plt.ylabel('Close value (US$)')
plt.legend(['Train set', 'Validation set', 'Test set'], loc='upper left')
print('Volume of all data: ',len(df))
print('Volume of train data: ', len(train_dataset))
print('Volume of validation data:', len(validation_dataset))
print('Volume of test data: ', len(test_dataset))

"""**Data Normalization**

DO NOT USE THIS WAY TO NORMALIZE DATA FOR MODELS!!!
"""

df_norm = df.copy()
scaler = MinMaxScaler(feature_range=(0,1))

df_norm['Close'] = scaler.fit_transform(df[['Close']])
df_norm['open'] = scaler.fit_transform(df_norm[['open']])
df_norm['high'] = scaler.fit_transform(df_norm[['high']])
df_norm['low'] = scaler.fit_transform(df_norm[['low']])
df_norm['Volume BTC'] = scaler.fit_transform(df_norm[['Volume BTC']])
df_norm['Volume USDT'] = scaler.fit_transform(df_norm[['Volume USDT']])

"""**Plotting Normalized Data**"""

fig = plt.figure(figsize=(14, 6))
plt.plot(df_norm.Close)
plt.xlabel('\nDate')
plt.ylabel('Close Price Normalized')
plt.title('Data Normalized\n')
plt.show()

"""**Plotting Normalized Training Data**"""

fig = plt.figure(figsize=(14, 6))
dataset_train= df_norm.iloc[:train_size]
plt.plot(dataset_train.Close)
plt.xlabel('\nDate')
plt.ylabel('Close Price Normalized')
plt.title('Training Data Normalized\n')
plt.show()

"""**Plotting Normalized Validation Data**"""

fig = plt.figure(figsize=(14, 6))
dataset_validation= df_norm.iloc[train_size:validation_size]
plt.plot(dataset_validation.Close)
plt.xlabel('\nDate')
plt.ylabel('Close Price Normalized')
plt.title('Validation Data Normalized\n')
plt.show()

"""**Plotting Normalized Testing Data**"""

fig = plt.figure(figsize=(14, 6))
dataset_test = df_norm.iloc[validation_size:]
plt.plot(dataset_test.Close)
plt.xlabel('\nDate')
plt.ylabel('Close Price Normalized')
plt.title('Testing Data Normalized\n')
plt.show()